регулярные выраженя Perl
split //,
~m/Шаблон  /....#матчинг вмето многоточия управляющие символы.
~m//i  игнорируем болшие и маленькие буквы. Ignor case
~s/регулярное выражение/на что замнить наше регулярное выражение/....#sobstitude собситуция 
управляющие символы   
g -глобальные, для всей строки.
u - трактоватьвсе символы как  юникод и сопостовляй как юникод
если в файле use utf-8  то u одставится автоматически.
\s - пробельные символы
\S всё кроме \s  


()=~m/()/i g #вернет части которые сопоставились
\d - цифры от 0 до 9
^- начало строки
{x,e} повтритель овторяет от х до у количество раз,
{1,} записать +
можно создаь свой клас в []
\d=[0-9] или[] от нуля о 9 
\d=[^0-9] всё кроме цифр  от нуля о 9 
$-конец строки
\ делает спец символы обычными, обычные специальные.
() спец символ группировки подшаблона которые потом попадут в глобальныепере
переменные $1, $2 и т.д. где цифра- номер скобок в выражении.
*- повторитель 0 и более раз
. - любой символ кроме конца строки, если нет модификатора(m или s)
если еть модификатор то  .  - все символы
? сец символ если сам по себе то ={0,1}
если идётза другим повторителем то делает повторитель не жадным а скромным
то есть повторительнамчинет брать минимум
o - опция once  получи переменную один раз и  используй её.
qr- вызывает функци которая возвращает  указатель на описание детермин
нированного конечного автомата на последующее выражение. заклчённое в
какой нибудь ограничиель
qr/.../xi   к qr  тоже можно использовать опции
(?:)-группировка без захвата
например (?:ab)+ ищем повторяющуюся последовательность ab
| - логическое или в поиске.
между ? и : могут быть модификаторы 
ели строка в $_  то ~m   можно не исать это равноильно.
x  можем включить  пробельные символы и коментарии.
my @n=q(wwjjdjjjjj )=~/(.)\1+/g; здесь \1 означает
 то что щас находится в $1  а этото что в ()
 

